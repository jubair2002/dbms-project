
INSERT INTO users (fname, lname, email, password, location, user_type) 
VALUES ('Admin', 'User', 'admin@crisislink.org', '[hashed_password]', 'Main Office', 'admin');


CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    fname VARCHAR(50) NOT NULL,
    lname VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(20) NOT NULL, -- Added phone number (mandatory)
    password VARCHAR(255) NOT NULL,
    picture VARCHAR(255) NOT NULL,
    location VARCHAR(100) NOT NULL,
    user_type ENUM('volunteer', 'regular', 'admin') NOT NULL,
    status ENUM('active', 'inactive') NOT NULL DEFAULT 'active', -- Added status field
    reset_token VARCHAR(64) DEFAULT NULL,
    reset_expires DATETIME DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE campaigns (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    image_url VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    goal DECIMAL(10, 2) NOT NULL,
    raised DECIMAL(10, 2) DEFAULT 0,
    allocated DECIMAL(10, 2) DEFAULT 0,
    donation_count INT DEFAULT 0,
    start_date DATETIME NOT NULL,
    end_date DATETIME NOT NULL,
    progress_color VARCHAR(7) DEFAULT '#4CAF50',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    status ENUM('pending', 'approved', 'rejected') DEFAULT 'pending',
    progress ENUM('ongoing', 'end') DEFAULT 'ongoing'
);

CREATE TABLE assignments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    campaign_id INT NOT NULL,           -- The campaign this task is part of
    volunteer_id INT NOT NULL,          -- The volunteer assigned to this task
    task_name VARCHAR(255) NOT NULL,    -- Task name
    description TEXT NOT NULL,         -- Task description
    priority ENUM('low', 'medium', 'high') NOT NULL,  -- Task priority
    deadline DATETIME NOT NULL,        -- Task deadline
    status ENUM('assigned', 'in-progress', 'completed', 'rejected', 'not-started') DEFAULT 'assigned',  -- Task status
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (campaign_id) REFERENCES campaigns(id),
    FOREIGN KEY (volunteer_id) REFERENCES users(id)
);



CREATE TABLE tasks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    assignment_id INT NOT NULL,        -- The assignment this task is part of
    task_name VARCHAR(255) NOT NULL,    -- Subtask name
    description TEXT NOT NULL,         -- Subtask description
    priority ENUM('low', 'medium', 'high') NOT NULL,  -- Task priority
    deadline DATETIME NOT NULL,        -- Task deadline
    status ENUM('assigned', 'in-progress', 'completed', 'rejected', 'not-started') DEFAULT 'assigned',  -- Task status
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (assignment_id) REFERENCES assignments(id)
);

CREATE TABLE donations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,  -- FK to users table
    campaign_id INT NOT NULL,  -- FK to campaigns table
    amount DECIMAL(10, 2) NOT NULL,
    donation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    donation_type ENUM('mobile_banking', 'credit_card', 'debit_card', 'bank_transfer') NOT NULL,  -- New column to store donation type
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (campaign_id) REFERENCES campaigns(id)
);

CREATE TABLE chat_rooms (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    type ENUM('global', 'private', 'campaign') NOT NULL DEFAULT 'private',
    campaign_id INT DEFAULT NULL,
    created_by INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_created_by (created_by),
    INDEX idx_campaign_id (campaign_id),
    FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (campaign_id) REFERENCES campaigns(id) ON DELETE SET NULL
);

CREATE TABLE chat_participants (
    id INT AUTO_INCREMENT PRIMARY KEY,
    chat_room_id INT NOT NULL,
    user_id INT NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_read_at TIMESTAMP NULL DEFAULT NULL,
    UNIQUE KEY unique_participant (chat_room_id, user_id),
    INDEX idx_chat_room (chat_room_id),
    INDEX idx_user (user_id),
    FOREIGN KEY (chat_room_id) REFERENCES chat_rooms(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


CREATE TABLE messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    chat_room_id INT NOT NULL,
    user_id INT NOT NULL,
    message TEXT NOT NULL,
    is_emergency TINYINT(1) NOT NULL DEFAULT 0,
    attachment_url VARCHAR(500) DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_chat_room (chat_room_id),
    INDEX idx_user (user_id),
    INDEX idx_created_at (created_at),
    INDEX idx_emergency (is_emergency),
    FOREIGN KEY (chat_room_id) REFERENCES chat_rooms(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


CREATE TABLE relief_categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    category_name VARCHAR(100) NOT NULL,
    description TEXT,
    status ENUM('active', 'inactive') DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- Insert some sample relief categories
INSERT INTO relief_categories (category_name, description) VALUES
('Food & Water', 'Emergency food supplies and clean drinking water'),
('Medical Supplies', 'Medicine, first aid kits, and medical equipment'),
('Shelter', 'Temporary housing, tents, and building materials'),
('Clothing', 'Clothes, blankets, and personal hygiene items'),
('Education', 'School supplies, books, and educational materials'),
('Transportation', 'Fuel, vehicle maintenance, and transport services'),
('Emergency Response', 'Immediate disaster response and rescue operations'),
('Infrastructure', 'Rebuilding roads, bridges, and essential facilities');


-- Table for campaign allocations
CREATE TABLE campaign_allocations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    campaign_id INT NOT NULL,
    category_id INT NOT NULL,
    allocated_amount DECIMAL(10, 2) NOT NULL,
    notes TEXT,
    allocated_by INT NOT NULL,
    date_allocated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (campaign_id) REFERENCES campaigns(id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES relief_categories(id),
    FOREIGN KEY (allocated_by) REFERENCES users(id),
    INDEX idx_campaign (campaign_id),
    INDEX idx_date (date_allocated)
);


CREATE TABLE notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    recipient_id INT NOT NULL,          -- Who receives the notification
    sender_id INT,                      -- Who sent it (NULL for system notifications)
    title VARCHAR(100) NOT NULL,        -- Short notification title
    message TEXT NOT NULL,              -- Full notification content
    is_read BOOLEAN DEFAULT FALSE,      -- Read status
    entity_type ENUM(                   -- Which type of entity triggered this
        'campaign',
        'assignment', 
        'task',
        'donation'
    ) NOT NULL,
    entity_id INT NOT NULL,             -- ID of the related entity
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- Foreign key to ensure recipient exists
    FOREIGN KEY (recipient_id) REFERENCES users(id) ON DELETE CASCADE,
    
    -- Optional foreign key if sender is a user
    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE SET NULL,
    
    -- Indexes for performance
    INDEX idx_recipient (recipient_id),
    INDEX idx_unread (recipient_id, is_read),
    INDEX idx_entity (entity_type, entity_id)
);